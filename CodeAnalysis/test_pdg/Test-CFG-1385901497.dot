digraph CFG {
  // graph-vertices
  v1  [label="2:  int delete(SQLiteDatabase db, Uri uri, String where, String[] whereArgs)"];
  v2  [label="3:  int count = 0"];
  v3  [label="4:  switch (mUriMatcher.match(uri))"];
  v4  [label="5:  case SINGLE_FILE:"];
  v5  [label="6:  Cursor c = query(db, uri, null, where, whereArgs, null)"];
  v6  [label="26:  case DIRECTORY:"];
  v7  [label="36:  Cursor children = query(uri, null, null, null, null)"];
  v8  [label="80:  case ROOT_DIRECTORY:"];
  v9  [label="82:  count = db.delete(ProviderTableMeta.FILE_TABLE_NAME, where, whereArgs)"];
  v10  [label="84:  case SHARES:"];
  v11  [label="85:  count = db.delete(ProviderTableMeta.OCSHARES_TABLE_NAME, where, whereArgs)"];
  v12  [label="87:  default:"];
  v13  [label="89:  throw new IllegalArgumentException('Unknown uri: ' + uri.toString())"];
  v14  [label="86:  break;"];
  v15  [label="end-switch"];
  v16  [label="91:  return count;"];
  v17  [label="83:  break;"];
  v18  [label="37:  if (children != null && children.moveToFirst())"];
  v19  [label="38:  long childId"];
  v20  [label="endif"];
  v21  [label="69:  count += db.delete(ProviderTableMeta.FILE_TABLE_NAME, ProviderTableMeta._ID + '=' + uri.getPathSegments().get(1) + (!TextUtils.isEmpty(where) ? ' AND (' + where + ')' : ''), whereArgs)"];
  v22  [label="79:  break;"];
  v23  [label="39:  boolean isDir"];
  v24  [label="40:  while (!children.isAfterLast())"];
  v25  [label="endwhile"];
  v26  [label="41:  childId = children.getLong(children.getColumnIndex(ProviderTableMeta._ID))"];
  v27  [label="42:  isDir = 'DIR'.equals(children.getString( children.getColumnIndex(ProviderTableMeta.FILE_CONTENT_TYPE) ))"];
  v28  [label="46:  if (isDir)"];
  v29  [label="47:  count += delete( db, ContentUris.withAppendedId(ProviderTableMeta.CONTENT_URI_DIR, childId), null, null )"];
  v30  [label="54:  count += delete( db, ContentUris.withAppendedId(ProviderTableMeta.CONTENT_URI_FILE, childId), null, null )"];
  v31  [label="endif"];
  v32  [label="61:  children.moveToNext()"];
  v33  [label="63:  children.close()"];
  v34  [label="7:  String remoteId = ''"];
  v35  [label="8:  if (c != null && c.moveToFirst())"];
  v36  [label="9:  remoteId = c.getString(c.getColumnIndex(ProviderTableMeta.FILE_REMOTE_ID))"];
  v37  [label="endif"];
  v38  [label="12:  Log_OC.d(TAG, 'Removing FILE ' + remoteId)"];
  v39  [label="14:  count = db.delete(ProviderTableMeta.FILE_TABLE_NAME, ProviderTableMeta._ID + '=' + uri.getPathSegments().get(1) + (!TextUtils.isEmpty(where) ? ' AND (' + where + ')' : ''), whereArgs)"];
  v40  [label="25:  break;"];
  // graph-edges
  v1 -> v2;
  v2 -> v3;
  v3 -> v4;
  v4 -> v5  [label="True"];
  v4 -> v6  [label="False"];
  v6 -> v7  [label="True"];
  v6 -> v8  [label="False"];
  v8 -> v9  [label="True"];
  v8 -> v10  [label="False"];
  v10 -> v11  [label="True"];
  v10 -> v12  [label="False"];
  v12 -> v13;
  v11 -> v14;
  v14 -> v15;
  v15 -> v16;
  v9 -> v17;
  v17 -> v15;
  v7 -> v18;
  v18 -> v19  [label="True"];
  v18 -> v20  [label="False"];
  v20 -> v21;
  v21 -> v22;
  v22 -> v15;
  v19 -> v23;
  v23 -> v24;
  v24 -> v25  [label="False"];
  v24 -> v26  [label="True"];
  v26 -> v27;
  v27 -> v28;
  v28 -> v29  [label="True"];
  v28 -> v30  [label="False"];
  v30 -> v31;
  v31 -> v32;
  v32 -> v24;
  v29 -> v31;
  v25 -> v33;
  v33 -> v20;
  v5 -> v34;
  v34 -> v35;
  v35 -> v36  [label="True"];
  v35 -> v37  [label="False"];
  v37 -> v38;
  v38 -> v39;
  v39 -> v40;
  v40 -> v15;
  v36 -> v37;
  // end-of-graph
}
